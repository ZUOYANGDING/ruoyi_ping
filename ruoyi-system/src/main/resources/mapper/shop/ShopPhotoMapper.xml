<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.system.mapper.shop.ShopPhotoMapper">
    <resultMap id="shopPhotoResult" type="com.ruoyi.system.domain.shop.ShopPhoto">
        <id         property="photoId"          column="photo_id"/>
        <result     property="photo"            column="photo"/>
        <result     property="createTime"       column="create_time"/>
        <result     property="updateTime"       column="update_time"/>
        <result     property="shopId"           column="shop_id"/>
    </resultMap>

    <sql id="selectShopPhotoVo">
        select photo_id, photo, create_time, update_time, shop_id
        from tb_photo
    </sql>

    <select id="getShopPhotoById" parameterType="Long" resultMap="shopPhotoResult">
        <include refid="selectShopPhotoVo"/>
        where photo_id = #{photoId}
    </select>

    <select id="getShopPhotoListByShopId" parameterType="Long" resultMap="shopPhotoResult">
        select p.photo_id, p.photo, p.create_time, p.update_time, p.shop_id
        from tb_shop_photo as p
        where p.shop_id = #{shopId}
    </select>

    <insert id="insertShopPhoto" parameterType="com.ruoyi.system.domain.shop.ShopPhoto" useGeneratedKeys="true" keyProperty="photoId">
        insert into tb_shop_photo(
            <if test="photoId != null and photoId != 0">photo_id,</if>
            <if test="photo != null and photo != ''">photo,</if>
            <if test="shopId != null and shopId != 0">shop_id,</if>
            create_time, update_time
        )values (
            <if test="photoId != null and photoId != 0">#{photoId},</if>
            <if test="photo != null and photo != ''">#{photo},</if>
            <if test="shopId != null and shopId != 0">#{shopId},</if>
            sysdate(), sysdate()
        )
    </insert>

    <insert id="batchInsertShopPhoto">
        insert into tb_shop_photo(
            photo_id, photo, shop_id, create_time, update_time)
        values
            <foreach collection="list" item="shopPhoto" index="index" separator=",">
                (#{shopPhoto.photoId}, #{shopPhoto.photo}, #{shopPhoto.shopId},
                sysdate(), sysdate())
            </foreach>
    </insert>

    <delete id="deleteShopPhotoById" parameterType="Long">
        delete from tb_shop_photo
        where photo_id = #{photoId}
    </delete>

    <delete id="deleteShopPhotoByIds" parameterType="Long">
        delete from tb_shop_photo
        where photo_id in
        <foreach collection="array" item="photoId" open="(" separator="," close=")">
            #{photoId}
        </foreach>
    </delete>
</mapper>